{"version":3,"sources":["webpack:///resources/js/views/customers/CustomerForm.vue","webpack:///./resources/js/views/customers/CustomerForm.vue?8237","webpack:///./resources/js/views/customers/CustomerForm.vue","webpack:///./resources/js/views/customers/CustomerForm.vue?de02","webpack:///./resources/js/views/customers/CustomerForm.vue?9a80"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,yEADA;AAEA,MAFA,kBAEA;AACA;AACA;AACA,gBADA;AAEA,gBAFA;AAGA,oBAHA;AAIA,sBAJA;AAKA,kBALA;AAMA,mBANA;AAOA,mBAPA;AAQA,oBARA;AASA,kBATA;AAUA;AAVA,OADA;AAcA,mBAdA;AAeA,kBAfA;AAgBA;AAhBA;AAkBA,GArBA;AAsBA,aAtBA,yBAsBA;AACA;AACA;AACA;AAAA;AAAA;AAAA,SADA;AAEA;AAAA;AAAA;AAAA,SAFA;AAGA;AAAA;AAAA;AAAA;AAAA,SAHA;AAIA;AAAA;AAAA,SAJA;AAKA;AAAA;AAAA;AAAA,SALA;AAMA;AAAA;AAAA,SANA;AAOA;AAAA;AAAA;AAPA;AADA;AAaA,GApCA;AAqCA,SArCA,qBAqCA;AACA;AACA;AACA;AACA,GAzCA;AA0CA;AAEA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AAEA;AACA,kBACA,sCADA,KAGA;AAEA,mBACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA,OAZA,WAaA;AAAA;AAAA,OAbA;AAeA,KAxCA;AA0CA;AAAA;;AACA,8BACA,IADA,CACA;AACA;AACA;AACA;AACA;AACA,OANA,WAMA;AAAA;AAAA,OANA;AAOA,KAlDA;AAoDA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA,oCADA;AAEA;AAFA;AAIA;AA9DA;AA1CA,G;;;;;;;;;;;;ACvJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC,eAAe,2BAA2B;AAC1C,iBAAiB,sBAAsB;AACvC,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,yBAAyB,qBAAqB;AAC9C,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAoD;AACvE;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,8BAA8B,+CAA+C;AAC7E,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAoD;AACvE;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,2BAA2B,sCAAsC;AACjE;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA,uBAAuB,SAAS,gCAAgC,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,0CAA0C,YAAY,gBAAgB,EAAE;AACxE;AACA;AACA;AACA,0CAA0C,YAAY,kBAAkB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAoD;AACvE;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,8BAA8B,iCAAiC;AAC/D,2BAA2B,mCAAmC;AAC9D;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA,uBAAuB,SAAS,kCAAkC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAoD;AACvE;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA,uBAAuB,SAAS,iCAAiC,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mCAAmC,uBAAuB,EAAE;AAC7E;AACA;AACA;AACA;AACA,yBAAyB,uCAAuC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAoD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB,iDAAiD;AAC1E;AACA;AACA,sCAAsC,uCAAuC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uCAAuC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,OAAO;AACP;AACA,iBAAiB,kDAAkD;AACnE;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxgBA;AAAA;AAAA;AAAA;AAAuG;AACvC;AACL;;;AAG3D;AACgG;AAChG,gBAAgB,2GAAU;AAC1B,EAAE,kFAAM;AACR,EAAE,mGAAM;AACR,EAAE,4GAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAkM,CAAgB,wPAAG,EAAC,C;;;;;;;;;;;;ACAtN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"js/chunks/4.js","sourcesContent":["<template>\n    <div class=\"row\"  >\n        \n        <div class=\"col-lg-12\">\n            <div class=\"card\">\n                \n                <div class=\"card-body\" >\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <h3>Cadastro de Cliente </h3>\n                        </div>\n                    </div>\n                    <hr>\n                    <form @submit.prevent=\"submit()\" >\n                        <div class=\"row\">\n                            <label class=\"col-sm-2 col-form-label\">Id</label>\n                            <div class=\"col-sm-4\">\n                                <input-component\n                                    :disabled=\"true\"\n                                    v-model=\"form.id\"                            \n                                    />\n                            </div>\n\n                            <label class=\"col-sm-2 col-form-label text-right\">Nome</label>\n                            <div class=\"col-sm-4\">\n                                <input-component\n                                    :autofocus=\"true\"\n                                    v-model=\"form.name\"\n                                    :validator=\"$v.form.name\"\n                                    @blur=\"$v.form.name.$touch\"\n                                    />\n                            </div>\n\n                            <label class=\"col-sm-2 col-form-label\">CPF: </label>\n                            <div class=\"col-sm-4\">\n                                <input-component\n                                    mask=\"###.###.###-##\"\n                                    v-model=\"form.identity\"\n                                    :validator=\"$v.form.identity\"\n                                    @blur=\"$v.form.identity.$touch\"\n                                    />\n                            </div>\n\n                            <label class=\"col-sm-2 col-form-label text-right\">Data Nascimento: </label>\n                            <div class=\"col-sm-4\">\n                                <input-component\n                                    mask=\"##/##/####\"\n                                    v-model=\"form.birth_date\"\n                                    :validator=\"$v.form.birth_date\"\n                                    @blur=\"$v.form.birth_date.$touch\"\n                                    />\n                            </div>\n\n                            <label class=\"col-sm-2 col-form-label\">Sexo: </label>\n                            <div class=\"col-sm-4\">\n                                <container-component :validator=\"$v.form.gender\">\n                                    <select class=\"custom-select form-control\" v-model=\"form.gender\" @blur=\"$v.form.gender.$touch\">\n                                        <option :value=\"'MALE'\">Masculino</option>\n                                        <option :value=\"'FEMALE'\">Feminino</option>\n                                    </select>\n                                </container-component>\n                            </div>\n                         \n                            <label class=\"col-sm-2 col-form-label text-right\">Address</label>\n                            <div class=\"col-sm-4\">\n                                <input-component\n                                    v-model=\"form.address\"\n                                    :validator=\"$v.form.address\"\n                                    @blur=\"$v.form.address.$touch\"\n                                    />\n                            </div>\n\n                            <label class=\"col-sm-2 col-form-label\">Estado:</label>\n                            <div class=\"col-sm-4 \">\n                                <container-component :validator=\"$v.form.state_id\">\n                                    <vue-select placeholder=\"Comece a digitar para buscar\"\n                                        :options=\"states\" label=\"name\"\n                                        @search=\"searchStateDebounce\"\n                                        @input=\"form.state_id = form.state.id\"\n                                        :clearable=\"false\"\n                                        v-model=\"form.state\">\n                                        <template slot=\"option\" slot-scope=\"option\">\n                                            {{ option.sigla}} - {{ option.name }}\n                                        </template>\n                                        <div slot=\"no-options\">Nenhum item encontrado!</div>\n                                        <div class=\"spinner\" v-show=\"spinnerState\">Buscando...</div>\n                                    </vue-select>\n                                </container-component>\n                            </div>\n\n                            <label class=\"col-sm-2 col-form-label text-right\">Cidade:</label>\n                            <div class=\"col-sm-4 \">\n                                <container-component :validator=\"$v.form.city_id\">\n                                    <vue-select placeholder=\"Comece a digitar para buscar\"\n                                        :options=\"cities\" label=\"name\"\n                                        @search=\"searchCityLocal\"\n                                        @input=\"form.city_id = form.city.id\"\n                                        :clearable=\"false\"\n                                        :disabled=\"!form.state\"\n                                        v-model=\"form.city\">\n                                        <template slot=\"option\" slot-scope=\"option\">\n                                            {{ option.name }}\n                                        </template>\n                                        <div slot=\"no-options\">Nenhum item encontrado!</div>\n                                        <div class=\"spinner\" v-show=\"spinnerCity\">Buscando...</div>\n                                    </vue-select>\n                                </container-component>\n                            </div>\n                           \n                        </div>\n                        <div class=\"row\" style=\"margin-top: 20px\">\n                            <div class=\"col-md-12 text-center\" v-if=\"errors || success\">\n                                <message-component :titulo=\"errorsTitle\" v-if=\"errors\" :erros=\"errors\" @fechar=\"errors = null\"></message-component>\n                                <message-component v-if=\"success\" :sucesso=\"success\" @fechar=\"success = null\"></message-component>\n                            </div>\n                            <div class=\"col-md-12 button-items text-center\">\n\n                                <router-link class=\"btn btn-warning waves-effect waves-light w-sm\" title=\"Voltar\" :to=\"{name: 'customers.index'}\">\n                                    <i class=\"bx bx-arrow-back d-block font-size-16\"></i> Voltar\n                                </router-link>\n\n                                <button type=\"submit\" class=\"btn btn-primary waves-effect waves-light w-sm\" title=\"salvar\">\n                                    <i class=\"bx bxs-save d-block font-size-16\"></i> Salvar\n                                </button>\n\n                            </div>\n                        </div>\n\n                        <div class=\"row\" style=\"margin-top: 40px\" v-if=\"form.id\">\n                            <div class=\"col-md-12  text-right flex info\" >\n                               Criado Em: <span class=\"badge badge-secondary\">{{form.created_at | timeformat}}</span><br>\n                               Atualizado Em: <span class=\"badge badge-secondary\">{{form.updated_at | timeformat}}</span><br>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                    \n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport { required,  maxLength} from \"vuelidate/lib/validators\";\nimport { isValidCpf, isDate, isBeforeToday } from \"../../herpers/helpers\";\nimport { CustomerService } from '../../services'\nimport AddressMixin from '../../mixins/address.mixin'\nimport moment from 'moment';\nconst customerService = new CustomerService();\n\nexport default {\n    mixins: [AddressMixin],\n    data() {\n        return {\n            form: {\n                id: null,\n                name: '',\n                identity: '',\n                birth_date: '',\n                gender: '',\n                address: '',\n                state: null,\n                state_id: '',\n                city: null,  \n                city_id: '',\n            },\n          \n            success: null,\n            errors:null,\n            errorsTitle:'',\n        } \n    },\n    validations() {\n        return {\n            form: {\n                name: {required, maxLength: maxLength(200)},\n                identity: {required, isValidCpf},\n                birth_date: {required, isDate, isBeforeToday},\n                gender: {required},\n                address: {required, maxLength: maxLength(200)},\n                state_id: {required},\n                city_id: {required},\n            },\n        }\n        \n\n    },\n    mounted() {\n        if (this.$route.params.id) {\n            this.get(this.$route.params.id);\n        }      \n    },\n    methods: {\n\n        submit: function(){\n\n            this.$v.form.$touch();\n            this.errors = null;\n            this.success = null;    \n            this.errorsTitle ='';\n\n            if (this.$v.form.$invalid){\n                this.errorsTitle = 'Preencha o formulário corretamente, alguns campos estão com errors!'\n                this.errors = this.$v.form;\n                return false;\n            }\n            let obj = {...this.form};\n            delete obj.city;\n            delete obj.state;\n            obj.birth_date = moment(obj.birth_date, 'DD/MM/YYYY', true).format('YYYY-MM-DD');\n            \n            let request = null;\n            if(obj.id)    \n                request = customerService.update(obj);\n            else\n                request = customerService.store(obj);\n\n            request.then(\n                response => {\n                    let redireciona = !this.form.id;\n                    this.success = \"Registro salvo com successo!\";\n                    if(redireciona) {\n                        let index = String(this.$route.path).lastIndexOf(\"/\");\n                        let newPath = String(this.$route.path).slice(0, index);\n                        this.form.id = response.data.data.id;\n                        newPath += \"/\" + this.form.id;\n                        this.$router.push(newPath);\n                        this.get(this.form.id);\n                    }\n                }   \n            ).catch( erro => this.errors = erro )\n\n        },\n\n        get: function(id){\n            customerService.get(id)\n                .then(  response => {\n                    this.form = response.data.data;\n                    this.form.state = this.form.city.state\n                    this.form.state_id = this.form.city.state.id\n                    this.form.birth_date = moment(this.form.birth_date).format(\"DD/MM/YYYY\");\n                }).catch( erro => this.errors = erro)\n        },\n\n        searchCityLocal: function(text, loading){\n            console.log(text, loading);\n            if(!this.form.state){\n                Vue.$toast.error(`Para buscar a cidade, selecione o estado`);\n                return\n            }\n            this.searchCityDebounce({\n                state_id: this.form.state.id,\n                name: text\n            });\n        }\n\n        \n\n    },\n\n};\n</script>\n<style scoped>\n\n\n\n\n\n</style>","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"row\" }, [\n    _c(\"div\", { staticClass: \"col-lg-12\" }, [\n      _c(\"div\", { staticClass: \"card\" }, [\n        _c(\"div\", { staticClass: \"card-body\" }, [\n          _vm._m(0),\n          _vm._v(\" \"),\n          _c(\"hr\"),\n          _vm._v(\" \"),\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.submit()\n                }\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"label\", { staticClass: \"col-sm-2 col-form-label\" }, [\n                  _vm._v(\"Id\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-sm-4\" },\n                  [\n                    _c(\"input-component\", {\n                      attrs: { disabled: true },\n                      model: {\n                        value: _vm.form.id,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"id\", $$v)\n                        },\n                        expression: \"form.id\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"label\",\n                  { staticClass: \"col-sm-2 col-form-label text-right\" },\n                  [_vm._v(\"Nome\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-sm-4\" },\n                  [\n                    _c(\"input-component\", {\n                      attrs: { autofocus: true, validator: _vm.$v.form.name },\n                      on: { blur: _vm.$v.form.name.$touch },\n                      model: {\n                        value: _vm.form.name,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"name\", $$v)\n                        },\n                        expression: \"form.name\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"label\", { staticClass: \"col-sm-2 col-form-label\" }, [\n                  _vm._v(\"CPF: \")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-sm-4\" },\n                  [\n                    _c(\"input-component\", {\n                      attrs: {\n                        mask: \"###.###.###-##\",\n                        validator: _vm.$v.form.identity\n                      },\n                      on: { blur: _vm.$v.form.identity.$touch },\n                      model: {\n                        value: _vm.form.identity,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"identity\", $$v)\n                        },\n                        expression: \"form.identity\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"label\",\n                  { staticClass: \"col-sm-2 col-form-label text-right\" },\n                  [_vm._v(\"Data Nascimento: \")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-sm-4\" },\n                  [\n                    _c(\"input-component\", {\n                      attrs: {\n                        mask: \"##/##/####\",\n                        validator: _vm.$v.form.birth_date\n                      },\n                      on: { blur: _vm.$v.form.birth_date.$touch },\n                      model: {\n                        value: _vm.form.birth_date,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"birth_date\", $$v)\n                        },\n                        expression: \"form.birth_date\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"label\", { staticClass: \"col-sm-2 col-form-label\" }, [\n                  _vm._v(\"Sexo: \")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-sm-4\" },\n                  [\n                    _c(\n                      \"container-component\",\n                      { attrs: { validator: _vm.$v.form.gender } },\n                      [\n                        _c(\n                          \"select\",\n                          {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.form.gender,\n                                expression: \"form.gender\"\n                              }\n                            ],\n                            staticClass: \"custom-select form-control\",\n                            on: {\n                              blur: _vm.$v.form.gender.$touch,\n                              change: function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.form,\n                                  \"gender\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              }\n                            }\n                          },\n                          [\n                            _c(\"option\", { domProps: { value: \"MALE\" } }, [\n                              _vm._v(\"Masculino\")\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"option\", { domProps: { value: \"FEMALE\" } }, [\n                              _vm._v(\"Feminino\")\n                            ])\n                          ]\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"label\",\n                  { staticClass: \"col-sm-2 col-form-label text-right\" },\n                  [_vm._v(\"Address\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-sm-4\" },\n                  [\n                    _c(\"input-component\", {\n                      attrs: { validator: _vm.$v.form.address },\n                      on: { blur: _vm.$v.form.address.$touch },\n                      model: {\n                        value: _vm.form.address,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"address\", $$v)\n                        },\n                        expression: \"form.address\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"label\", { staticClass: \"col-sm-2 col-form-label\" }, [\n                  _vm._v(\"Estado:\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-sm-4 \" },\n                  [\n                    _c(\n                      \"container-component\",\n                      { attrs: { validator: _vm.$v.form.state_id } },\n                      [\n                        _c(\n                          \"vue-select\",\n                          {\n                            attrs: {\n                              placeholder: \"Comece a digitar para buscar\",\n                              options: _vm.states,\n                              label: \"name\",\n                              clearable: false\n                            },\n                            on: {\n                              search: _vm.searchStateDebounce,\n                              input: function($event) {\n                                _vm.form.state_id = _vm.form.state.id\n                              }\n                            },\n                            scopedSlots: _vm._u([\n                              {\n                                key: \"option\",\n                                fn: function(option) {\n                                  return [\n                                    _vm._v(\n                                      \"\\n                                        \" +\n                                        _vm._s(option.sigla) +\n                                        \" - \" +\n                                        _vm._s(option.name) +\n                                        \"\\n                                    \"\n                                    )\n                                  ]\n                                }\n                              }\n                            ]),\n                            model: {\n                              value: _vm.form.state,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"state\", $$v)\n                              },\n                              expression: \"form.state\"\n                            }\n                          },\n                          [\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              {\n                                attrs: { slot: \"no-options\" },\n                                slot: \"no-options\"\n                              },\n                              [_vm._v(\"Nenhum item encontrado!\")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.spinnerState,\n                                    expression: \"spinnerState\"\n                                  }\n                                ],\n                                staticClass: \"spinner\"\n                              },\n                              [_vm._v(\"Buscando...\")]\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"label\",\n                  { staticClass: \"col-sm-2 col-form-label text-right\" },\n                  [_vm._v(\"Cidade:\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-sm-4 \" },\n                  [\n                    _c(\n                      \"container-component\",\n                      { attrs: { validator: _vm.$v.form.city_id } },\n                      [\n                        _c(\n                          \"vue-select\",\n                          {\n                            attrs: {\n                              placeholder: \"Comece a digitar para buscar\",\n                              options: _vm.cities,\n                              label: \"name\",\n                              clearable: false,\n                              disabled: !_vm.form.state\n                            },\n                            on: {\n                              search: _vm.searchCityLocal,\n                              input: function($event) {\n                                _vm.form.city_id = _vm.form.city.id\n                              }\n                            },\n                            scopedSlots: _vm._u([\n                              {\n                                key: \"option\",\n                                fn: function(option) {\n                                  return [\n                                    _vm._v(\n                                      \"\\n                                        \" +\n                                        _vm._s(option.name) +\n                                        \"\\n                                    \"\n                                    )\n                                  ]\n                                }\n                              }\n                            ]),\n                            model: {\n                              value: _vm.form.city,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"city\", $$v)\n                              },\n                              expression: \"form.city\"\n                            }\n                          },\n                          [\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              {\n                                attrs: { slot: \"no-options\" },\n                                slot: \"no-options\"\n                              },\n                              [_vm._v(\"Nenhum item encontrado!\")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.spinnerCity,\n                                    expression: \"spinnerCity\"\n                                  }\n                                ],\n                                staticClass: \"spinner\"\n                              },\n                              [_vm._v(\"Buscando...\")]\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"row\", staticStyle: { \"margin-top\": \"20px\" } },\n                [\n                  _vm.errors || _vm.success\n                    ? _c(\n                        \"div\",\n                        { staticClass: \"col-md-12 text-center\" },\n                        [\n                          _vm.errors\n                            ? _c(\"message-component\", {\n                                attrs: {\n                                  titulo: _vm.errorsTitle,\n                                  erros: _vm.errors\n                                },\n                                on: {\n                                  fechar: function($event) {\n                                    _vm.errors = null\n                                  }\n                                }\n                              })\n                            : _vm._e(),\n                          _vm._v(\" \"),\n                          _vm.success\n                            ? _c(\"message-component\", {\n                                attrs: { sucesso: _vm.success },\n                                on: {\n                                  fechar: function($event) {\n                                    _vm.success = null\n                                  }\n                                }\n                              })\n                            : _vm._e()\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-md-12 button-items text-center\" },\n                    [\n                      _c(\n                        \"router-link\",\n                        {\n                          staticClass:\n                            \"btn btn-warning waves-effect waves-light w-sm\",\n                          attrs: {\n                            title: \"Voltar\",\n                            to: { name: \"customers.index\" }\n                          }\n                        },\n                        [\n                          _c(\"i\", {\n                            staticClass: \"bx bx-arrow-back d-block font-size-16\"\n                          }),\n                          _vm._v(\" Voltar\\n                            \")\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _vm._m(1)\n                    ],\n                    1\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              _vm.form.id\n                ? _c(\n                    \"div\",\n                    {\n                      staticClass: \"row\",\n                      staticStyle: { \"margin-top\": \"40px\" }\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-md-12  text-right flex info\" },\n                        [\n                          _vm._v(\"\\n                           Criado Em: \"),\n                          _c(\"span\", { staticClass: \"badge badge-secondary\" }, [\n                            _vm._v(\n                              _vm._s(_vm._f(\"timeformat\")(_vm.form.created_at))\n                            )\n                          ]),\n                          _c(\"br\"),\n                          _vm._v(\n                            \"\\n                           Atualizado Em: \"\n                          ),\n                          _c(\"span\", { staticClass: \"badge badge-secondary\" }, [\n                            _vm._v(\n                              _vm._s(_vm._f(\"timeformat\")(_vm.form.updated_at))\n                            )\n                          ]),\n                          _c(\"br\")\n                        ]\n                      )\n                    ]\n                  )\n                : _vm._e()\n            ]\n          )\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"row\" }, [\n      _c(\"div\", { staticClass: \"col-md-12\" }, [\n        _c(\"h3\", [_vm._v(\"Cadastro de Cliente \")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"button\",\n      {\n        staticClass: \"btn btn-primary waves-effect waves-light w-sm\",\n        attrs: { type: \"submit\", title: \"salvar\" }\n      },\n      [\n        _c(\"i\", { staticClass: \"bx bxs-save d-block font-size-16\" }),\n        _vm._v(\" Salvar\\n                            \")\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./CustomerForm.vue?vue&type=template&id=87d801ca&scoped=true&\"\nimport script from \"./CustomerForm.vue?vue&type=script&lang=js&\"\nexport * from \"./CustomerForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"87d801ca\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/maickel/projetos/cadastro-cliente/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('87d801ca')) {\n      api.createRecord('87d801ca', component.options)\n    } else {\n      api.reload('87d801ca', component.options)\n    }\n    module.hot.accept(\"./CustomerForm.vue?vue&type=template&id=87d801ca&scoped=true&\", function () {\n      api.rerender('87d801ca', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/customers/CustomerForm.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CustomerForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CustomerForm.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CustomerForm.vue?vue&type=template&id=87d801ca&scoped=true&\""],"sourceRoot":""}